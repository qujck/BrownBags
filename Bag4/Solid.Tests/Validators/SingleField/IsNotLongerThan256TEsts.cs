using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Solid.Validators.SingleField;
using Solid.Model;
using NUnit.Framework;

namespace Solid.Tests.Unit.Validators.SingleField
{
    public class IsNotLongerThan256Tests
    {
        [TestCase("123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345")]
        [TestCase("1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456")]
        public void Validate_WhenStringIsNoLongerThan256_Succeeds(string value)
        {
            var validator = new IsNotLongerThan256();
            var data = new FileData { StringValue = value };
            Assert.LessOrEqual(value.Length, 256);
            Assert.DoesNotThrow(() => validator.Validate(data));
        }

        [TestCase("12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567")]
        [TestCase("123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678")]
        public void Validate_WhenStringIsLongerThan256_Throws(string value)
        {
            var validator = new IsNotLongerThan256();
            var data = new FileData { StringValue = value };
            Assert.Greater(value.Length, 256);
            Assert.Throws<ArgumentException>(() => validator.Validate(data));
        }
    }
}
